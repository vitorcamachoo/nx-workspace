name: Deploy

on:
  push:
    branches-ignore:
      - 'dependabot/**'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  prerun:
    runs-on: ubuntu-latest
    name: Preparing environment
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      
      - name: Retrieving base and head references
        shell: bash
        id: branch
        run:  |
          echo "::set-output name=HEAD::${{ github.sha }}"
          if [[ $GITHUB_BASE_REF ]]
          then
            echo "::set-output name=BASE_BRANCH::${GITHUB_HEAD_REF}"
          else
            echo "::set-output name=BASE_BRANCH::${GITHUB_REF#refs/heads/}~1"
          fi
      
      - name: Detect changed directories
        uses: gagle/nx-check-changes@v1.0.0
        id: nx-changes
        with:
          baseRef: ${{ steps.branch.outputs.BASE_BRANCH }}
          headRef: ${{ steps.branch.outputs.HEAD }}

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true' && steps.nx-changes.outputs.not-affected == 'false'
        run: npm install
      
      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true' && steps.nx-changes.outputs.not-affected == 'false'
        run: npm install
      
      - name: Parse matrix
        run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"

    # outputs:
    #   # affected: "{\"affected\":[$(echo ${{ steps.nx-changes.outputs.changed-dirs }} | sed 's/ /,/g')]}"
    #   # affected: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
    #   skip: ${{ steps.nx-changes.outputs.not-affected }}

  deploy:
    # if: needs.prerun.outputs.skip == 'false'
    runs-on: ubuntu-latest
    needs: prerun
    strategy:
      matrix: ${{fromJson(needs.prerun.outputs.matrix)}}
    steps:
      # - run: 'echo affected: ${{ matrix.affected }}'
      # - id: apps
      #   run: echo "::set-output name=output::'apps/application-1 apps/application-2'"
      # - run: echo ${{ steps.apps.outputs.output }}
      # - id: parsed
      #   run: echo "::set-output name=matrix::[$(echo ${{ steps.apps.outputs.output}} | sed 's/ /,/g')]''"
      - run: echo ${{ matrix.project }}
      - run: echo ${{ matrix.config }}

      
  
  # deploy:
  #   # if: "!contains(github.event.head_commit.message, '[skip ci]')"
  #   runs-on: ubuntu-latest

  #   steps:
  #     # - uses: actions/checkout@v2
  #     #   with:
  #     #     fetch-depth: 0

  #     # - name: Use Node.js 15
  #     #   uses: actions/setup-node@v1
  #     #   with:
  #     #     node-version: 15.x

  #     # - uses: actions/cache@v2
  #     #   id: npm-cache
  #     #   with:
  #     #     path: '**/node_modules'
  #     #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  #     # - name: Install Dependencies
  #     #   if: steps.npm-cache.outputs.cache-hit != 'true'
  #     #   run: npm install

  #     - name: Deploy affected applications
  #       run: |
  #         echo "::set-output name=OUTPUT_COMMAND::$(npm run affected:deploy -- --parallel --base=${{ github.event.before }})"
  #       shell: bash
  #       id: deploy
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID}}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID}}

  #     - name: print output
  #       shell: bash
  #       run: | 
  #         echo BEGIN \n
  #         echo ${{ steps.deploy.outputs.OUTPUT_COMMAND }}
  #         echo END \n