name: Deploy

on:
  push:
    branches-ignore:
      - 'dependabot/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: Preparing environment
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Retrieving base and head references
        shell: bash
        id: branch
        run:  |
          echo "::set-output name=HEAD::${{ github.sha }}"
          if [[ $GITHUB_BASE_REF ]]
          then
            echo "::set-output name=BRANCH_REF::${GITHUB_HEAD_REF}"
          else
            echo "::set-output name=BRANCH_REF::${GITHUB_REF#refs/heads/}~1"
          fi

      - name: Detect changed directories
        uses: gagle/nx-check-changes@v1.0.0
        id: nx-changes
        with:
          baseRef: ${{ steps.branch.outputs.BRANCH_REF }}
          headRef: ${{ steps.branch.outputs.HEAD }}

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - run: |
            echo not-affected: ${{steps.nx-changes.outputs.not-affected == 'false'}}
            echo cache-hit: ${{steps.npm-cache.outputs.cache-hit != 'true'}}
      
      - name: Install Dependencies
        if: steps.nx-changes.outputs.not-affected == 'false' && steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
         
      - name: Parsing affected applications
        id: parser
        run: | 
          echo "::set-output name=affected::[$(echo ${{ steps.nx-changes.outputs.changed-dirs }} | sed "s/[^ ][^ ]*/\"&\"/g" | sed 's/ /, /g')]"
          
    outputs:
      baseRef: ${{ steps.branch.outputs.BRANCH_REF }}
      headRef: ${{ steps.branch.outputs.HEAD }}
      affected: ${{ steps.parser.outputs.affected }}
      skip: ${{ steps.nx-changes.outputs.not-affected }}

  deploy:
    if: needs.prepare.outputs.skip == 'false' && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Deploy affected applications
        shell: bash
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
        run: |
          nx affected --target=deploy "--parallel" "--base" "feature/netlify-deploy~1" "--head" "b20990a8405a2258472cd415707fbcd3e12fb9b8"    
